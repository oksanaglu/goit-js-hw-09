{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACbC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,0BAGlC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUL,UAEpBQ,EAAO,CAAEH,WAAUL,S,GAEpBA,E,IAIPJ,EAAKC,KAAKe,iBAAiB,UAAU,SAACC,GACpC,IAAIC,EAAaC,OAAOnB,EAAKI,MAAMgB,OAC/BC,EAAYF,OAAOnB,EAAKK,KAAKe,OAC7BE,EAAcH,OAAOnB,EAAKM,OAAOc,OACnCH,EAAEM,iBAEF,IADA,IAAIC,EAAQN,EACHO,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrCjB,EAAc,EAAIiB,EAAGD,GAClBE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUL,EAAKuB,EAALvB,MACjBwB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAAN3B,EAAM,M,IAEvE4B,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUL,EAAKuB,EAALvB,MAClBwB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAAN3B,EAAM,M,IAEpE8B,SAAQ,W,OAAMC,QAAQC,IAAI,kB,IACzBZ,GAASH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\nform: document.querySelector('form'),\ndelay: document.querySelector('input[name=\"delay\"]'),\nstep: document.querySelector('input[name=\"step\"]'),\namount: document.querySelector('input[name=\"amount\"]'),\nbtnSubmit: document.querySelector('button[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\nrefs.form.addEventListener('submit', (e) => {\n  let FirstDelay = Number(refs.delay.value);\n  let delayStep = Number(refs.step.value);\n  let amountValue = Number(refs.amount.value);\n    e.preventDefault(); \n    let delay = FirstDelay;\n    for (let i = 1; i <= amountValue; i += 1) {\n      createPromise(1 + i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n        .finally(() => console.log('Promise settled'));\n          delay += delayStep;\n    } \n});\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","btnSubmit","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","FirstDelay","Number","value","delayStep","amountValue","preventDefault","delay1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","console","log"],"version":3,"file":"03-promises.e16bb0e6.js.map"}