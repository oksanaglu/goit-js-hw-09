{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACbC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,0BAGlC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUL,UAEpBQ,EAAO,CAAEH,WAAUL,S,GAEpBA,E,IAIPJ,EAAKC,KAAKe,iBAAiB,SAAS,WAClC,IAAIC,EAAaC,OAAOlB,EAAKI,MAAMe,OAC/BC,EAAYF,OAAOlB,EAAKK,KAAKc,OAC7BE,EAAcH,OAAOlB,EAAKM,OAAOa,OACrCnB,EAAKO,UAAUS,iBAAiB,SAAS,SAAAM,GACvCA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrChB,EAAc,EAAIgB,EAAGP,EAAa,EAAIG,GACnCK,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUL,EAAKsB,EAALtB,MACjBuB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUL,EAAKsB,EAALtB,MAClBuB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAAN1B,EAAM,M,IAEvEa,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\nform: document.querySelector('form'),\ndelay: document.querySelector('input[name=\"delay\"]'),\nstep: document.querySelector('input[name=\"step\"]'),\namount: document.querySelector('input[name=\"amount\"]'),\nbtnSubmit: document.querySelector('button[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\nrefs.form.addEventListener('input', () => {\n  let FirstDelay = Number(refs.delay.value);\n  let delayStep = Number(refs.step.value);\n  let amountValue = Number(refs.amount.value);\n  refs.btnSubmit.addEventListener('click', e => {\n    e.preventDefault();\n    for (let i = 1; i <= amountValue; i += 1) {\n      createPromise(1 + i, FirstDelay + 1 * delayStep)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n      FirstDelay += delayStep;\n    }\n  });\n});\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","btnSubmit","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","FirstDelay","Number","value","delayStep","amountValue","e","preventDefault","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6f716269.js.map"}